@model IEnumerable<TrashCollector.Models.Address>

@{
    ViewData["Title"] = "DisplayCustomerDetails";
    Layout = "~/Views/Shared/_Layout_Employee.cshtml";
}

<h1>DisplayCustomerDetails</h1>

<h3>@Model.ToList()[0].Customer.Name</h3>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Street_Number_and_Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Zip_Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Customer)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Street_Number_and_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Zip_Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.State.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.Id)
                </td>
            </tr>
        }
    </tbody>
</table>

    <a asp-action="Index">Return to Index</a>


    <div id="map" style="height: 400px; width:auto;"></div>
    <script>

                        var map;
                        function initMap() {
                            var coordinatesArray = @Html.Raw(Json.Serialize(Model.Select(a => a.Coordinates).ToArray()));
                            var centerCoordinates = coordinatesArray[0].split(" ");
                            map = new google.maps.Map(document.getElementById('map'), {
                                center: { lat: parseFloat(centerCoordinates[0]), lng: parseFloat(centerCoordinates[1]) },
                                zoom: 14
                            });
                            var markers = [];
                            for (var i = 0; i < coordinatesArray.length; i++)
                            {
                                var currentCoordinatesString = coordinatesArray[i];
                                var coordinates = currentCoordinatesString.split(" ");
                                markers.push(new google.maps.Marker({ position: { lat: parseFloat(coordinates[0]), lng: parseFloat(coordinates[1]) }, map: map }));
                            }
                        }
    </script>
    <script src=@Model.ToList()[0].APIKey
            async defer></script>
